<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kit Alumni</title>
    <link rel="stylesheet" href="home.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="icon" href="/images/favicon.ico" type="image/x-icon" />

  

 
</head>
<style>
  body {
    background-color: #dce6f4;
    margin: 0;
    padding: 0;
  }
    .postcontainer {
        display: flex;
        flex-direction: column;
        gap: 20px;
        width: 750px;
        height: 600px;
        padding: 10px;
        margin: auto;
        overflow: auto;
        overflow-x: hidden;
        margin-left: 20px;
        box-sizing: border-box;
        padding-top: 0px;
        margin-left: 30px;
        border: 1px solid rgb(204, 202, 202);
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
      }
      
      .post {
         height: auto;
         width: 650px;
         margin: 0;
     

      }
      
      .post-user {
        display: flex;
        align-items: center;
        margin-left: 10px;
      }
      
      .user-profile {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        object-fit: cover;
      }
      
      .postheader {
        font-weight: bold;
        font-size: 1rem;
        height: auto;
        width: 100%;
        overflow: hidden;

      }
      
      .postimg img,
      .postimg video {
        width: 100%;
        height: 300px;
        object-fit: cover;
        border-radius: 8px;
        margin-top: 1px; 
        object-position: center;
      }
      
      .postdescription {
        margin-top: 10px;
        color: #333;
        margin-bottom: 2px;
      }
      
      .post-actions {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        flex-wrap: wrap;
        margin-top: 10px;
        gap: 10px;
      }
       
     .head{
      margin-right: 40px;
     }
      .importantsection{
        height: 250px;
        /* margin-right: 10px; */
        width: 600px;
        border-radius: 3px;
        color: black;
        display: flex;
        background: rgb(246, 251, 249);
        box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin-top: 90px;
       
      }
      
      .importantsection h3{
        text-align: center;
       
      }

.importantsection button {
    height: 45px;
    width: 400px;
    font-size: 16px;
    color: white;
    background-image: linear-gradient( 109.6deg,  rgba(62,161,219,1) 11.2%, rgba(93,52,236,1) 100.2% );
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    justify-content: center;
    gap: 8px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }
  .importantsection i {
    
    text-decoration: none;
    color: white;
  }
  .importantsection a{
    color: white;
    text-decoration: none;
  }
  
  .rows{
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-self: center;
    height: auto;
    width: 600px;
  
   
  }
  .current-user-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: #ffffff;
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    padding: 15px 20px;
    max-width: 500px;
    margin: 20px auto;
    height: 350px;
    width: 295px;
    gap: 15px;
    transition: all 0.3s ease;
  }
  
  .current-user-card:hover {
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  }
  
  .current-user-avatar img {
    width: 70px;
    height: 70px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid #ccc;
  }
  
  .current-user-info {
    background: linear-gradient(135deg, #fdfbfb 0%, #ebedee 100%);
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    width: 100%;
    max-width: 400px;
    margin: auto;
    text-align: center;
  }
  
  .current-user-info:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  .current-user-info h3 {
    margin: 0;
    font-size: 1.6rem;
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 10px;
    position: relative;
  }
  
  .current-user-info h3::after {
    content: "";
    display: block;
    height: 2px;
    width: 40px;
    background-color: #3498db;
    margin: 8px auto 0;
    border-radius: 2px;
  }
  
  .current-user-info p {
    margin: 6px 0;
    font-size: 1rem;
    color: #555;
    line-height: 1.4;
    font-weight: 500;
  }
  
  .connecteduser{
    display: flex;
    flex-direction: column;
    align-items: center;
    background: #ffffff;
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    padding: 15px 20px;
    max-width: 500px;
    margin: 20px auto;
    height: 350px;
    width: 295px;
    gap: 15px;
    transition: all 0.3s ease;
  }
      
      
/* Tablets: Stack vertically if space is tight */
@media (max-width: 768px) {
    .postcontainer {
      width: 100%;
      padding: 0 10px;
      margin-left: 0;
    }
  
    .row {
      flex-direction: column;
      align-items: center;
      gap: 15px;
    }
  
    .allposts, .post {
      width: 93%;
      height: auto;
    }
  
    .postimg img,
    .postimg video {
      max-height: 180px;
    }
  }

  
/* Mobile Phones: Single post per row, full width */
@media (max-width: 480px) {
  .rows {
     display: flex;
    flex-direction: column;
    width: auto;
    padding:0;
    width: 369px;
    margin-right: 0px;

  }
  .head{
    margin-right: 0px;
   }
  
  .gallary{
    width: 100%;
  }
  .row{
    width: 90%;
  }
  .alldatacontainer{
    width: 100%;
  }

    .postcontainer{
        
      width: 412px;
      height: 600px;
      overflow:
  auto;
      margin-top: 27px;
     
      
  }
  .current-user-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    background:
#ffffff;
    border-radius:
10px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    padding:
15px 20px;
    margin-left: 37px;
    height: 350px;
    gap:
15px;
    transition:
all 0.3s ease;
    width: 405px;
  
    }
    .connecteduser {
      display: flex;
      flex-direction: column;
      align-items: center;
      background:
    #ffffff;
      border-radius:
    10px;
    overflow: scroll;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      padding:
    15px 20px;
     
      margin:
    20px auto;
      height: 350px;
      width: 408px;
      gap:
    15px;
      transition:
    all 0.3s ease;
   
   
    }

    .importantsection{
      width: 405px;
     
     }
      
   .importantsection button{
    width: 250px !important;
    
   }
     .allposts .post{
       width: 390px;
     }

     
  }
    .allposts, .post {
        width: 99%;
        height: auto;
    }
  
    .user-profile {
      width: 30px;
      height: 30px;
  
    }
  
    .postheader {
      font-size: 0.95rem;
    }
  
    .post-actions {
      flex-direction: row;
      gap: 5px;
      background-color: transparent;
    }
    
  
   .importantsection button{
    width: 450px;
    padding: 5px 80px;
   }
   .importantsection a{
    text-align: center;
   }
   @media (max-width:400px){
    .importantsection{
      width: 352px;
    margin-left: 8px;
    }
   
    .current-user-card{
      width: 352px;
      margin-left: 7px;
    }
    .postcontainer{
        width: 358px;
        margin:0px;
        overflow: auto;
    }
    .connecteduser{
      width: 352px;
      overflow: auto;
    }
    .popup-menu{
      margin-left: 217px;
  margin-top: -65px;
    }
   }
  
 

   .connecteduser {
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 10px;
    overflow-y: auto;
    white-space: nowrap;

  }
  
  .connecteduser h3 {
    margin-bottom: 15px;
    color: #333;
    text-align: center;
  }
  
  /* Horizontal scroll wrapper */
  .connecteduser .user-profile {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    width: 100%;
    height: 71px;
    
    padding:
  10px;
    border-radius:
  10px;
  background-image: linear-gradient( 109.6deg,  rgba(62,161,219,1) 11.2%, rgb(117, 93, 203) 100.2% );

    border:
  1px solid #8096a4;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    position: relative;
  }
  
  .user-profile img {
    width: 40px;
    height: 40px;
    object-fit: cover;
    border-radius: 50%;
    border: 2px solid #ccc;
  }
  
  .user-info {
    text-align: center;
    margin-top: 0px;
  }
  
  .user-info h4 {
    margin: 13px 0;
    font-size: 16px;
    color: #fff;
  }
  
  .user-info p {
    margin: 0;
    font-size: 14px;
    color: #fff;
    margin-top: 5px;
  }
  
  .user-info small {
    font-size: 12px;
    color: #fff;
  }
  
  /* Online/Offline status dot */
  .status-indicator {
    position: absolute;
    top: 40px;
    left: 60%;
    transform: translateX(-50%);
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid #fff;
  }
  
  .status-indicator.online {
    background-color: #28c76f;
  }
  
  .status-indicator.offline {
    background-color: #ea5455;
  }
  
     
  
</style>

<body >
    <form action="/home" method="post">
    <!-- ----------------this is navbar-------------------- -->
    <nav class="navbars">
      <div class="logo">Kit Alumni</div>
    
      <!-- Search Form -->
      <form action="/search" method="get">
        <div class="searchbox">
          <i class="fa-solid fa-magnifying-glass"></i>
          <input type="text" id="searchinput" name="search" placeholder="Search..." autocomplete="off">
        </div>
      </form>
    
      <!-- Hamburger Menu for Mobile -->
      <!-- <div class="hamburger" >
        <div class="bar"></div>
        <div class="bar"></div>
        <div class="bar"></div>
      </div> -->
    
      <!-- Navigation Menu -->
      <ul class="menu" id="menu">
        <li><i class="fa-solid fa-house" id="icon1"></i> <a href="/home">Home</a></li>
        <li><i class="fa-regular fa-address-card" id="icon2"></i> <a href="/about">About</a></li>
        <li><i class="fa-solid fa-file-arrow-up" id="icon3"></i><a href="/upload">Post</a></li>
        <% if (user) { %>
          <li><i class="fa-solid fa-user-tie" id="icon4"></i> <a href="/profile/<%= user._id %>">Account</a></li>
        <% } %>
        <li><button onclick="showsPopup()" class="btn"><i class="fas fa-users" id="icon5"></i> Students</button></li>
        <li><button onclick="showPopup()" class="btn"><i class="fa-solid fa-graduation-cap" id="icon6"></i> Alumni</button></li>
        <li>
          <form action="/logout" method="post">
            <button type="submit" class="btn btn-danger logout-btn" id="lgtbtn">
              <i class="fas fa-sign-out-alt" id="icon7"></i> Logout
            </button>
          </form>
        </li>
      </ul>
    </nav>
    
     
    

</form>

<!-- this is for searched results or profiles display here -->
    <div id="search-results" class="hidden">
        <div id="user-results"></div>
        <div id="post-results"></div>
    </div>
    <!-- -------this is for gallary section------- -->
   
      

<!-- ------------this is postcontainer allpost are display here--------------->

     <div class="alldatacontainer">
     
          <!-- this is for all posts are display here -->
          <div class="postcontainer">
            <% for (let i = 0; i < allposts.length; i++) { 
                 let post = allposts[i]; %>
              
                <div class="allposts">
                  <div class="post">
                    <!-- USER -->
                    <div class="post-user">
                      <% if (post.user) { %>
                        <a href="/profile/<%= post.user._id %>" class="user-link">
                          <% if (post.user.profileimg) { %>
                            <img class="user-profile" src="/upload/<%= post.user.profileimg %>" />
                            <% console.log(post.user.profileimg) %>
                          <% } else { %>
                            <img class="user-profile" src="/upload/defaultimg.jpeg" />
                          <% } %>
                          <p class="username"><%= post.user.username %></p>
                        </a>
                      <% } else { %>
                        <p class="username">Unknown User</p>
                      <% } %>
                    </div>
                    
                    
                    
          
                    <!-- TITLE -->
                    <div class="postheader"><%= post.title %></div>
          
                    <!-- MEDIA -->
                    <a href="/allpost/<%= post._id %>">
                      <% if (post.postimg) { %>
                        <div class="postimg"><img src="/upload/<%= post.postimg %>" ></div>
                      <% } else if (post.videopost) { %>
                        <div class="postimg"><video src="/upload/<%= post.videopost %>" controls autoplay></video></div>
                      <% } %>
                      <div class="postdescription">
                        <p>Description: <%= post.description %>...</p>
                      </div>
                    </a>
          
                     
                    <div class="post-actions">
                      <button class="like-btn" data-post-id="<%= post._id %>">
                        <i class="fa fa-thumbs-up"></i>
                        <span class="like-count"><%= post.likes ? post.likes.length : 0 %></span>
                      </button>
                      <a href="/allpost/<%= post._id %>">
                        <button class="comment-btn">Comment</button>
                      </a>
                      <button class="share-btn"><i class="fa fa-share"></i> Copy Link</button>
                      <button class="morebtn" data-post-id="<%= post._id %>">
                        <i class="fa-solid fa-ellipsis-vertical"></i>
                      </button>
                      

                      <div class="popup-menu" id="popup-<%= post._id %>" style="padding-left: 0;">
                        <ul>
                         <% if (post.user && currentUser && post.user.toString() === currentUser.toString()) { %>
                    <li><a class="edit-link" href="/edit/<%= post._id %>">Edit</a></li>
                    <li>
                      <form action="/delete/<%= post._id %>?_method=DELETE" method="POST" style="display:inline;">
                        <button type="submit">Delete</button>
                      </form>
                    </li>
                  <% } %>
                      
                          <li>
                            <button class="report-btn" data-post-id="<%= post._id %>">Report</button>
                          </li>
                        </ul>
                      </div>
                      
                    </div>
                  </div>
                </div>
             
            <% } %>
          </div>
          
   
        <div class="head">
            <div class="importantsection">
               <h3>Important Links</h3>
               <button id="event-btn" style="position: relative;">
               <i class="fa-solid fa-calendar-days"></i>
                <a href="/viewevent">Event</a>
                <span id="event-badge" style="
                  display: none;
                  position: absolute;
                  top: -5px;
                  right: -5px;
                  background-color: red;
                  color: white;
                  border-radius: 50%;
                  padding: 3px 6px;
                  font-size: 10px;
                ">New</span>
              </button>
              
              <button id="placement-btn" style="position: relative;">
                <i class="fa-solid fa-bag-shopping"></i>
                <a href="/viewplacement">Placement</a>
                <span id="placement-badge" style="
                  display: none;
                  position: absolute;
                  top: -5px;
                  right: -5px;
                  background-color: red;
                  color: white;
                  border-radius: 50%;
                  padding: 3px 6px;
                  font-size: 10px;
                ">New</span>
              </button>
              <!-- || 'defaultimg.jpeg' -->
            </div>
            <div class="rows">
                <div class="userprofile">
                    <% if (user) { %>
                        <div class="current-user-card">
                          <div class="current-user-avatar">
                            <img src="/upload/<%= user.profileimg  %>" >
                          </div>
                          <div class="current-user-info">
                            <h3><%= user.username %></h3>
                            <p>Email: <%= user.email %></p>
                            <p>Role: <%= user.role %></p>
                            <p>Batch: <%= user.graduate %></p>
                          </div>
                        </div>
                      <% } %>
                    

                </div>
                <!-- Display Current User's Connections -->
                <div class="connecteduser">
                  <h3>My Connections</h3>
                  <% connections.forEach(user => { %>
                    <div class="user-profile">
                      <div style="position: relative;">
                        <!-- Profile Image -->
                        <img src="/upload/<%= user.profileimg || 'defaultimg.jpeg' %>"  />
                
                        <!-- Online / Offline Indicator -->
                        <% if (user.isOnline) { %>
                          <span class="status-indicator online" title="Online"></span>
                        <% } else { %>
                          <span class="status-indicator offline" title="Last seen: <%= new Date(user.lastSeen).toLocaleString() %>"></span>
                        <% } %>
                      </div>
                
                      <div class="user-info">
                        <h4><%= user.username %></h4>
                        <% if (!user.isOnline && user.lastSeen) { %>
                          <small>Last active: <%= new Date(user.lastSeen).toLocaleString() %></small>
                        <% } %>
                      </div>
                    </div>
                  <% }) %>
                </div>
                

                
            </div>
               
        </div>
          

     </div>`

     <div class="gallery">
        <div class="gallery-title">
          <h2>Our Stunning Gallery</h2>
          <p>Explore breathtaking views and moments</p>
        </div>
      
        <div class="image-row-container">
            <div class="image-row">
              <% events.forEach(event => { %>
                <% if (event.postimg) { %>
                  <a href="/event/<%= event._id %>">
                    <img src="/upload/<%= event.postimg %>"  />
                  </a>
                  
                <% } %>
              <% }) %>
            </div>
          </div>
          
          
     </div>

<!-------------------------- reprt modal Structure----------------------- -->
    <div id="reportModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Report Post</h2>
            <form action="/report" method="post">
                <input type="hidden" name="postId" id="postId">
                <textarea id="reportReason" name="reason" placeholder="Enter report reason..." required></textarea>
                <button type="submit" id="submitReport">Submit Report</button>
            </form>
        </div>
    </div>
<!---------------------------this is for batchs--------------------------->
<div id="popup" class="popup-overlay">
    <div class="popup-box">
        <h4 style="text-align: center;">Find your Alumini</h4>
        
        <div class="batch-container">
            <% batchs.forEach(batch => { %>
                <div class="batch">
                    <a href="/users/<%= batch._id %>">
                         <%= batch._id %>
                    </a>
                </div>
            <% }); %>
        </div>
        <!-- close btn -->
        <div>
            <button  class="btn-close" onclick="hidePopup()"></button>
        </div>
        
    </div>
</div>
<!-- -----------------------students------------------------ -->
<div id="popup1" class="popup-overlay">
    <div class="popup-box">
        <h4 style="text-align: center;">Find your students</h4>
        
        <div class="batch-container">
            <% if (typeof batchs !== "undefined" && batchs.length > 0) { %>
                <% batchs.forEach(batch => { %>
                    <div class="batch">
                        <a href="/users/<%= batch._id %>/students">
                            <%= batch._id %>
                        </a>
                    </div>
                <% }); %>
            <% } else { %>
                <p style="text-align: center;">No student batches available.</p>
            <% } %>
        </div>

        <!-- Close button -->
        <div>
            <button class="btn-close" onclick="hideSPopup()"></button>
        </div>
    </div>
</div>

<div class="feedback-container">
  <h2>Feedback is steps to improve anything!</h2>
  <form action="/feedback" method="POST">

    <% if (messages.success && messages.success.length > 0) { %>
      <div class="flash-success"><%= messages.success[0] %></div>
    <% } %>
    
    <% if (messages.error && messages.error.length > 0) { %>
      <div class="flash-error"><%= messages.error[0] %></div>
    <% } %>
    
    <label for="name">Name</label>
    <input type="text" id="name" name="name" required>

    <label for="email">Email</label>
    <input type="email" id="email" name="email" required>

    <label for="message">Your Feedback</label>
    <textarea id="message" name="message" rows="5" required></textarea>

    <button type="submit">Submit</button>
  </form>
</div>


<!--------------------this is for footer----------------- -->
<%- include('./include/footer.ejs') %>

    <script>
     
  /*     const hamburger = document.querySelector('.hamburger');
        const menu = document.querySelector('.menu');
      
        hamburger.addEventListener('click', () => {
          hamburger.classList.toggle('active');
          menu.classList.toggle('active');
        }); */
        function showPopup() {
            document.getElementById("popup").style.display = "flex";
        }

        // Function to hide the pop-up
        function hidePopup() {
            document.getElementById("popup").style.display = "none";
        }
        function showsPopup() {
            document.getElementById("popup1").style.display = "flex";
        }

        // Function to hide the pop-up
        function hideSPopup() {
            document.getElementById("popup1").style.display = "none";
        }
 
        
       
        
        document.querySelectorAll('.graduate-btn').forEach(button => {
            button.addEventListener('click', function() {
                const year = this.getAttribute('data-year');
                const userList = document.getElementById(`users-${year}`);
    
                // Toggle user list visibility
                userList.style.display = (userList.style.display === "none") ? "block" : "none";
            });
        });
     
        

        
            
        
            //  Share Button
            document.querySelectorAll(".share-btn").forEach(btn => {
                btn.addEventListener("click", function () {
                    let postId = this.getAttribute("data-post-id");
                    let postURL = `${window.location.origin}/allpost/${postId}`;
                    navigator.clipboard.writeText(postURL).then(() => {
                        alert("Post link copied to clipboard!");
                    });
                });
            });
        
        
            const loggedInUserId = "<%= user._id %>";
            document.querySelectorAll(".like-btn").forEach(button => {
                button.addEventListener("click", async function () {
                  const postId = this.getAttribute("data-post-id");
            
                  if (!loggedInUserId) {
                    alert("You must be logged in to like posts.");
                    return;
                  }
            
                  try {
                    const response = await fetch("/like", {
                      method: "POST",
                      headers: {
                        "Content-Type": "application/json",
                      },
                      body: JSON.stringify({ postId, userId: loggedInUserId }),
                    });
            
                    const data = await response.json();
            
                    if (data.success) {
                      const likeCountSpan = this.querySelector(".like-count");
                      likeCountSpan.textContent = data.likes;
                    } else {
                      alert("Failed to like post.");
                    }
                  } catch (error) {
                    console.error("Error liking post:", error);
                  }
                });
              });
    
    
            
            document.addEventListener("DOMContentLoaded", function () {
                const reportBtns = document.querySelectorAll(".report-btn");
                const modal = document.getElementById("reportModal");
                const closeBtn = document.querySelector(".close");
                const postIdInput = document.getElementById("postId");
                const reportForm = document.querySelector("form[action='/report']");
                const reportReasonInput = document.getElementById("reportReason");
            
                // Ensure modal is hidden when the page loads
                modal.style.display = "none";
            
                // Show modal when report button is clicked
                reportBtns.forEach(button => {
                    button.addEventListener("click", function (event) {
                        event.preventDefault();
                        const postId = button.getAttribute("data-post-id");
                        postIdInput.value = postId; // Set post ID in hidden input
                        modal.style.display = "flex";
                    });
                });
            
                // Close modal when close button is clicked
                closeBtn.addEventListener("click", function () {
                    modal.style.display = "none";
                });
            
                // Close modal if clicked outside modal content
                window.addEventListener("click", function (event) {
                    if (event.target === modal) {
                        modal.style.display = "none";
                    }
                });
            
                // Handle form submission via AJAX
                reportForm.addEventListener("submit", function (event) {
                    event.preventDefault(); // Prevent default form submission
            
                    const postId = postIdInput.value;
                    const reason = reportReasonInput.value;
            
                    if (!postId || !reason) {
                        alert("Post ID and reason are required.");
                        return;
                    }
            
                    fetch("/report", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ postId, reason }),
                    })
                    .then(response => response.json())
                    .then(data => {
                        alert(data.message);
            
                        // Close the modal automatically
                        modal.style.display = "none";
            
                        // Optionally, clear the textarea
                        reportReasonInput.value = "";
            
                        // If the post was deleted, reload the page
                        if (data.deleted) {
                            location.reload();
                        }
                    })
                    .catch(error => console.error("Error:", error));
                });
            });
    
            
            let searchTimer;
            document.getElementById("searchinput").addEventListener("input", function () {
                clearTimeout(searchTimer);
                searchTimer = setTimeout(async () => {
                    let input = this.value.trim();
                    let resultsContainer = document.getElementById("search-results");
                    let userResults = document.getElementById("user-results");
                    let postResults = document.getElementById("post-results");
            
                    if (input === "") {
                        resultsContainer.style.display = "none";
                        return;
                    }
            
                    try {
                        //  Updated fetch URL
                        let response = await fetch(`/search-json?q=${encodeURIComponent(input)}`);
                        let data = await response.json();
            
                        // Clear old results
                        userResults.innerHTML = "";
                        postResults.innerHTML = "";
            
                        // Show user results
                        data.users.forEach(user => {
                            let userElement = document.createElement("div");
                            userElement.className = "result-item";
                            userElement.innerHTML = `
                      <img src="/upload/${user.profileimg ? encodeURIComponent(user.profileimg) : 'defaultimg.jpeg'}" >
                                <p>${user.username}</p>
                            `;
                            userElement.addEventListener("click", () => {
                                window.location.href = `/profile/${user._id}`;
                            });
                            userResults.appendChild(userElement);
                        });
            
                        // Show post results
                        data.posts.forEach(post => {
                            let postElement = document.createElement("div");
                            postElement.className = "result-item";
                            postElement.innerHTML = `<p>${post.title}</p>`;
                            postElement.addEventListener("click", () => {
                                window.location.href = `/post/${post._id}`;
                            });
                            postResults.appendChild(postElement);
                        });
            
                        // Show the results container if there’s anything to show
                        resultsContainer.style.display = (data.users.length > 0 || data.posts.length > 0) ? "block" : "none";
            
                    } catch (error) {
                        console.error("Search error:", error);
                    }
                }, 300);
            });


            document.querySelectorAll('.morebtn').forEach(button => {
                button.addEventListener('click', function(event) {
                    event.stopPropagation(); // Prevent the click from reaching the document
            
                    // Close any open popup menus
                    document.querySelectorAll('.popup-menu').forEach(menu => {
                        menu.style.display = 'none';
                    });
            
                    // Get the corresponding popup menu
                    const postId = this.getAttribute('data-post-id');
                    const popupMenu = document.getElementById(`popup-${postId}`);
            
                    // Toggle the display of the popup menu
                    if (popupMenu.style.display === 'block') {
                        popupMenu.style.display = 'none';
                    } else {
                        popupMenu.style.display = 'block';
                    }
                });
            });
            
            // Close the popup menu if clicking outside of it
            document.addEventListener('click', function() {
                document.querySelectorAll('.popup-menu').forEach(menu => {
                    menu.style.display = 'none';
                });
            });
            
            // Prevent closing when clicking inside the popup menu
            document.querySelectorAll('.popup-menu').forEach(menu => {
                menu.addEventListener('click', function(event) {
                    event.stopPropagation();
                });
            });
            
            
            document.querySelector('form').addEventListener('submit', function (e) {
                e.preventDefault(); //  this will block the form from submitting
                // optional: manually send via fetch() here
              });
              
            


              
                document.addEventListener('DOMContentLoaded', () => {
                  const lastSeen = localStorage.getItem('lastSeenEventTime') || new Date(0).toISOString();
              
                  fetch(`/api/new-event-check?lastSeen=${lastSeen}`)
                    .then(res => res.json())
                    .then(data => {
                      if (data.hasNew) {
                        document.getElementById('event-badge').style.display = 'inline';
                      }
                    });
                });
              
                // Optional: Clear badge when going to event page
                document.getElementById('event-btn').addEventListener('click', () => {
                  localStorage.setItem('lastSeenEventTime', new Date().toISOString());
                  document.getElementById('event-badge').style.display = 'none';
                });
               
              
                  document.addEventListener('DOMContentLoaded', () => {
                    const lastSeenPlacement = localStorage.getItem('lastSeenPlacementTime') || new Date(0).toISOString();
                
                    fetch(`/api/new-placement-check?lastSeen=${lastSeenPlacement}`)
                      .then(res => res.json())
                      .then(data => {
                        if (data.hasNew) {
                          document.getElementById('placement-badge').style.display = 'inline';
                        }
                      });
                  });
                
                  // Optional: Clear badge when user goes to view placement
                  document.getElementById('placement-btn').addEventListener('click', () => {
                    localStorage.setItem('lastSeenPlacementTime', new Date().toISOString());
                    document.getElementById('placement-badge').style.display = 'none';
                  });
            
                

        </script>
            
</body>
</html>

              